# Makefile.in generated by automake 1.9.6 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/homme
pkglibdir = $(libdir)/homme
pkgincludedir = $(includedir)/homme
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = spelt$(EXEEXT)
subdir = .
DIST_COMMON = $(am__configure_deps) $(include_HEADERS) \
	$(srcdir)/../../helpers/install-sh \
	$(srcdir)/../../helpers/missing $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure ../../helpers/depcomp \
	../../helpers/install-sh ../../helpers/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libhomme_spelt_a_AR = $(AR) $(ARFLAGS)
libhomme_spelt_a_LIBADD =
am__objects_1 = bndry_mod.$(OBJEXT) spelt_mod.$(OBJEXT) \
	spelt_bench_mod.$(OBJEXT) fvm_analytic_mod.$(OBJEXT) \
	fvm_bsp_mod.$(OBJEXT) fvm_control_volume_mod.$(OBJEXT) \
	fvm_reconstruction_mod.$(OBJEXT) fvm_filter_mod.$(OBJEXT) \
	fvm_init_mod.$(OBJEXT) fvm_transformation_mod.$(OBJEXT) \
	cg_mod.$(OBJEXT) checksum_mod.$(OBJEXT) \
	netcdf_io_mod.$(OBJEXT) common_movie_mod.$(OBJEXT) \
	common_io_mod.$(OBJEXT) control_mod.$(OBJEXT) \
	coordinate_systems_mod.$(OBJEXT) cube_mod.$(OBJEXT) \
	derivative_mod.$(OBJEXT) dimensions_mod.$(OBJEXT) \
	dof_mod.$(OBJEXT) domain_mod.$(OBJEXT) edge_mod.$(OBJEXT) \
	element_mod.$(OBJEXT) gridgraph_mod.$(OBJEXT) \
	hybrid_mod.$(OBJEXT) interp_movie_mod.$(OBJEXT) \
	netcdf_io_mod.$(OBJEXT) shal_movie_mod.$(OBJEXT) \
	interpolate_mod.$(OBJEXT) kinds.$(OBJEXT) ll_mod.$(OBJEXT) \
	mass_matrix_mod.$(OBJEXT) metagraph_mod.$(OBJEXT) \
	metis_mod.$(OBJEXT) mesh_mod.$(OBJEXT) namelist_mod.$(OBJEXT) \
	netcdf_io_mod.$(OBJEXT) parallel_mod.$(OBJEXT) \
	params_mod.$(OBJEXT) physical_constants.$(OBJEXT) \
	quadrature_mod.$(OBJEXT) reduction_mod.$(OBJEXT) \
	repro_sum_mod.$(OBJEXT) restart_mod.$(OBJEXT) \
	restart_io_mod.$(OBJEXT) schedule_mod.$(OBJEXT) \
	spacecurve_mod.$(OBJEXT) surfaces_mod.$(OBJEXT) \
	state_mod.$(OBJEXT) repro_sum_mod.$(OBJEXT) \
	thread_mod.$(OBJEXT) time_mod.$(OBJEXT) \
	viscosity_mod.$(OBJEXT) global_norms_mod.$(OBJEXT) \
	pio_io_mod.$(OBJEXT) shr_kind_mod.$(OBJEXT) \
	shr_mpi_mod.$(OBJEXT) shr_sys_mod.$(OBJEXT) \
	shr_file_mod.$(OBJEXT) shr_vmath_mod.$(OBJEXT)
am_libhomme_spelt_a_OBJECTS = $(am__objects_1)
libhomme_spelt_a_OBJECTS = $(am_libhomme_spelt_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_spelt_OBJECTS = spelt_main.$(OBJEXT)
spelt_OBJECTS = $(am_spelt_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
spelt_DEPENDENCIES = ./libhomme_spelt.a $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libhomme_spelt_a_SOURCES) $(spelt_SOURCES)
DIST_SOURCES = $(libhomme_spelt_a_SOURCES) $(spelt_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run tar
AUTOCONF = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run autoconf
AUTOHEADER = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run autoheader
AUTOMAKE = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run automake-1.9
AWK = gawk
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = cpp -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
FC = ftn
FCFLAGS = -g -O2
HOMME_INCLUDE = -I/opt/cray/netcdf/4.0.1.3/netcdf-intel/include 
HOMME_LDFLAGS = -L/contrib/pnetcdf/1.2.0/intel/lib -L/opt/cray/netcdf/4.0.1.3/netcdf-intel/lib 
HOMME_LIBS = -lpnetcdf -lnetcdf -llapack -lblas
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = -L/contrib/pnetcdf/1.2.0/intel/lib -L/opt/cray/netcdf/4.0.1.3/netcdf-intel/lib
LIBOBJS = 
LIBS = 
LOCAL_BLAS_LOCATION = -L../../libs/blas
LOCAL_LAPACK_LOCATION = -L../../libs/lapack
LTLIBOBJS = 
MAKEINFO = ${SHELL} /glade/home/erath/hommelynx/helpers/missing --run makeinfo
MY_DEFS = -DHAVE_CONFIG_H
NC = 4
NP = 4
NTRAC = 
OBJEXT = o
PACKAGE = homme
PACKAGE_BUGREPORT = erath@ucar.edu
PACKAGE_NAME = HOMME
PACKAGE_STRING = HOMME 1.1.0
PACKAGE_TARNAME = homme
PACKAGE_VERSION = 1.1.0
PATH_SEPARATOR = :
PLEV = 1
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.1.0
ac_ct_CC = cc
ac_ct_FC = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /glade/home/erath/hommelynx/helpers/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = foreign
# Relevant Directories within the HOMME repository
# holding source files needed for building the library
# and executable spelt.
SRC = ../../src
SRC_SHARE = $(SRC)/share
UTILS = ../../utils/csm_share
INCLUDES = -I../../utils/pio -I../../utils/timing -I ../../src $(HOMME_INCLUDE)
AM_FCFLAGS = $(MY_DEFS)
AM_LDFLAGS = $(LOCAL_BLAS_LOCATION) $(LOCAL_LAPACK_LOCATION) $(HOMME_LDFLAGS)
SRCS_F90 = $(SRC_SHARE)/bndry_mod.F90 \
			$(SRC_SHARE)/spelt_mod.F90 \
			$(SRC)/spelt_bench_mod.F90 \
			$(SRC_SHARE)/fvm_analytic_mod.F90 \
			$(SRC)/fvm_bsp_mod.F90 \
			$(SRC_SHARE)/fvm_control_volume_mod.F90 \
			$(SRC_SHARE)/fvm_reconstruction_mod.F90 \
			$(SRC_SHARE)/fvm_filter_mod.F90 \
			$(SRC)/fvm_init_mod.F90 \
			$(SRC)/fvm_transformation_mod.F90 \
		        $(SRC_SHARE)/cg_mod.F90 \
		        $(SRC)/checksum_mod.F90 \
		        $(SRC)/netcdf_io_mod.F90 \
		        $(SRC)/common_movie_mod.F90 \
		        $(SRC)/common_io_mod.F90 \
		        $(SRC_SHARE)/control_mod.F90 \
		        $(SRC_SHARE)/coordinate_systems_mod.F90 \
		        $(SRC_SHARE)/cube_mod.F90 \
		        $(SRC_SHARE)/derivative_mod.F90 \
	          	$(SRC_SHARE)/dimensions_mod.F90 \
	          	$(SRC_SHARE)/dof_mod.F90 \
	          	$(SRC_SHARE)/domain_mod.F90 \
		        $(SRC_SHARE)/edge_mod.F90 \
		  	$(SRC_SHARE)/element_mod.F90 \
		        $(SRC_SHARE)/gridgraph_mod.F90 \
		        $(SRC_SHARE)/hybrid_mod.F90 \
			$(SRC)/interp_movie_mod.F90 \
			$(SRC)/netcdf_io_mod.F90 \
			$(SRC)/shal_movie_mod.F90 \
			$(SRC_SHARE)/interpolate_mod.F90 \
			$(SRC_SHARE)/kinds.F90 \
			$(SRC_SHARE)/ll_mod.F90 \
			$(SRC_SHARE)/mass_matrix_mod.F90 \
		        $(SRC_SHARE)/metagraph_mod.F90 \
		        $(SRC_SHARE)/metis_mod.F90 \
		        $(SRC_SHARE)/mesh_mod.F90 \
		        $(SRC_SHARE)/namelist_mod.F90 \
		        $(SRC)/netcdf_io_mod.F90 \
		        $(SRC_SHARE)/parallel_mod.F90 \
		        $(SRC_SHARE)/params_mod.F90 \
		        $(SRC_SHARE)/physical_constants.F90 \
		        $(SRC_SHARE)/quadrature_mod.F90 \
		        $(SRC_SHARE)/reduction_mod.F90 \
		        $(SRC)/repro_sum_mod.F90 \
		        $(SRC)/restart_mod.F90 \
		        $(SRC)/restart_io_mod.F90 \
		        $(SRC_SHARE)/schedule_mod.F90 \
		        $(SRC_SHARE)/spacecurve_mod.F90 \
		        $(SRC)/surfaces_mod.F90 \
		        $(SRC)/state_mod.F90 \
			      $(SRC)/repro_sum_mod.F90 \
		        $(SRC_SHARE)/thread_mod.F90 \
		        $(SRC_SHARE)/time_mod.F90 \
		        $(SRC_SHARE)/viscosity_mod.F90 \
		        $(SRC_SHARE)/global_norms_mod.F90 \
		        $(SRC)/pio_io_mod.F90 \
		        $(UTILS)/shr_kind_mod.F90 \
        		$(UTILS)/shr_mpi_mod.F90 \
        		$(UTILS)/shr_sys_mod.F90 \
        		$(UTILS)/shr_file_mod.F90 \
        		$(UTILS)/shr_vmath_mod.F90 

FDEPENDS = ../../helpers/fdepends.awk
DEPSUF = .d
DEPENDS := $(SRCS_F90:.F90=$(DEPSUF))
lib_LIBRARIES = libhomme_spelt.a
libhomme_spelt_a_SOURCES = $(SRCS_F90)	 

spelt_SOURCES = $(SRC)/spelt_main.F90
spelt_LDADD = ./libhomme_spelt.a \
					-L../../utils/pio -lpio \
					-L../../utils/timing -ltiming \
					$(AM_LDFLAGS) \
					$(HOMME_LIBS)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F90 .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign '; \
	      cd $(srcdir) && $(AUTOMAKE) --foreign  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libhomme_spelt.a: $(libhomme_spelt_a_OBJECTS) $(libhomme_spelt_a_DEPENDENCIES) 
	-rm -f libhomme_spelt.a
	$(libhomme_spelt_a_AR) libhomme_spelt.a $(libhomme_spelt_a_OBJECTS) $(libhomme_spelt_a_LIBADD)
	$(RANLIB) libhomme_spelt.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
spelt$(EXEEXT): $(spelt_OBJECTS) $(spelt_DEPENDENCIES) 
	@rm -f spelt$(EXEEXT)
	$(FCLINK) $(spelt_LDFLAGS) $(spelt_OBJECTS) $(spelt_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.F90.o:
	$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

bndry_mod.o: $(SRC_SHARE)/bndry_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bndry_mod.o `test -f '$(SRC_SHARE)/bndry_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/bndry_mod.F90

bndry_mod.obj: $(SRC_SHARE)/bndry_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bndry_mod.obj `if test -f '$(SRC_SHARE)/bndry_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/bndry_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/bndry_mod.F90'; fi`

spelt_mod.o: $(SRC_SHARE)/spelt_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_mod.o `test -f '$(SRC_SHARE)/spelt_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/spelt_mod.F90

spelt_mod.obj: $(SRC_SHARE)/spelt_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_mod.obj `if test -f '$(SRC_SHARE)/spelt_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/spelt_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/spelt_mod.F90'; fi`

spelt_bench_mod.o: $(SRC)/spelt_bench_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_bench_mod.o `test -f '$(SRC)/spelt_bench_mod.F90' || echo '$(srcdir)/'`$(SRC)/spelt_bench_mod.F90

spelt_bench_mod.obj: $(SRC)/spelt_bench_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_bench_mod.obj `if test -f '$(SRC)/spelt_bench_mod.F90'; then $(CYGPATH_W) '$(SRC)/spelt_bench_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/spelt_bench_mod.F90'; fi`

fvm_analytic_mod.o: $(SRC_SHARE)/fvm_analytic_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_analytic_mod.o `test -f '$(SRC_SHARE)/fvm_analytic_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_analytic_mod.F90

fvm_analytic_mod.obj: $(SRC_SHARE)/fvm_analytic_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_analytic_mod.obj `if test -f '$(SRC_SHARE)/fvm_analytic_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_analytic_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_analytic_mod.F90'; fi`

fvm_bsp_mod.o: $(SRC)/fvm_bsp_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bsp_mod.o `test -f '$(SRC)/fvm_bsp_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_bsp_mod.F90

fvm_bsp_mod.obj: $(SRC)/fvm_bsp_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bsp_mod.obj `if test -f '$(SRC)/fvm_bsp_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_bsp_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_bsp_mod.F90'; fi`

fvm_control_volume_mod.o: $(SRC_SHARE)/fvm_control_volume_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_control_volume_mod.o `test -f '$(SRC_SHARE)/fvm_control_volume_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_control_volume_mod.F90

fvm_control_volume_mod.obj: $(SRC_SHARE)/fvm_control_volume_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_control_volume_mod.obj `if test -f '$(SRC_SHARE)/fvm_control_volume_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_control_volume_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_control_volume_mod.F90'; fi`

fvm_reconstruction_mod.o: $(SRC_SHARE)/fvm_reconstruction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_reconstruction_mod.o `test -f '$(SRC_SHARE)/fvm_reconstruction_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_reconstruction_mod.F90

fvm_reconstruction_mod.obj: $(SRC_SHARE)/fvm_reconstruction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_reconstruction_mod.obj `if test -f '$(SRC_SHARE)/fvm_reconstruction_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_reconstruction_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_reconstruction_mod.F90'; fi`

fvm_filter_mod.o: $(SRC_SHARE)/fvm_filter_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_filter_mod.o `test -f '$(SRC_SHARE)/fvm_filter_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_filter_mod.F90

fvm_filter_mod.obj: $(SRC_SHARE)/fvm_filter_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_filter_mod.obj `if test -f '$(SRC_SHARE)/fvm_filter_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_filter_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_filter_mod.F90'; fi`

fvm_init_mod.o: $(SRC)/fvm_init_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_init_mod.o `test -f '$(SRC)/fvm_init_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_init_mod.F90

fvm_init_mod.obj: $(SRC)/fvm_init_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_init_mod.obj `if test -f '$(SRC)/fvm_init_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_init_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_init_mod.F90'; fi`

fvm_transformation_mod.o: $(SRC)/fvm_transformation_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_transformation_mod.o `test -f '$(SRC)/fvm_transformation_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_transformation_mod.F90

fvm_transformation_mod.obj: $(SRC)/fvm_transformation_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_transformation_mod.obj `if test -f '$(SRC)/fvm_transformation_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_transformation_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_transformation_mod.F90'; fi`

cg_mod.o: $(SRC_SHARE)/cg_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cg_mod.o `test -f '$(SRC_SHARE)/cg_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/cg_mod.F90

cg_mod.obj: $(SRC_SHARE)/cg_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cg_mod.obj `if test -f '$(SRC_SHARE)/cg_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/cg_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/cg_mod.F90'; fi`

checksum_mod.o: $(SRC)/checksum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o checksum_mod.o `test -f '$(SRC)/checksum_mod.F90' || echo '$(srcdir)/'`$(SRC)/checksum_mod.F90

checksum_mod.obj: $(SRC)/checksum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o checksum_mod.obj `if test -f '$(SRC)/checksum_mod.F90'; then $(CYGPATH_W) '$(SRC)/checksum_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/checksum_mod.F90'; fi`

netcdf_io_mod.o: $(SRC)/netcdf_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o netcdf_io_mod.o `test -f '$(SRC)/netcdf_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/netcdf_io_mod.F90

netcdf_io_mod.obj: $(SRC)/netcdf_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o netcdf_io_mod.obj `if test -f '$(SRC)/netcdf_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/netcdf_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/netcdf_io_mod.F90'; fi`

common_movie_mod.o: $(SRC)/common_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_movie_mod.o `test -f '$(SRC)/common_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/common_movie_mod.F90

common_movie_mod.obj: $(SRC)/common_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_movie_mod.obj `if test -f '$(SRC)/common_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/common_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/common_movie_mod.F90'; fi`

common_io_mod.o: $(SRC)/common_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_io_mod.o `test -f '$(SRC)/common_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/common_io_mod.F90

common_io_mod.obj: $(SRC)/common_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_io_mod.obj `if test -f '$(SRC)/common_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/common_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/common_io_mod.F90'; fi`

control_mod.o: $(SRC_SHARE)/control_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o control_mod.o `test -f '$(SRC_SHARE)/control_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/control_mod.F90

control_mod.obj: $(SRC_SHARE)/control_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o control_mod.obj `if test -f '$(SRC_SHARE)/control_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/control_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/control_mod.F90'; fi`

coordinate_systems_mod.o: $(SRC_SHARE)/coordinate_systems_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o coordinate_systems_mod.o `test -f '$(SRC_SHARE)/coordinate_systems_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/coordinate_systems_mod.F90

coordinate_systems_mod.obj: $(SRC_SHARE)/coordinate_systems_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o coordinate_systems_mod.obj `if test -f '$(SRC_SHARE)/coordinate_systems_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/coordinate_systems_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/coordinate_systems_mod.F90'; fi`

cube_mod.o: $(SRC_SHARE)/cube_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cube_mod.o `test -f '$(SRC_SHARE)/cube_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/cube_mod.F90

cube_mod.obj: $(SRC_SHARE)/cube_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cube_mod.obj `if test -f '$(SRC_SHARE)/cube_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/cube_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/cube_mod.F90'; fi`

derivative_mod.o: $(SRC_SHARE)/derivative_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivative_mod.o `test -f '$(SRC_SHARE)/derivative_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/derivative_mod.F90

derivative_mod.obj: $(SRC_SHARE)/derivative_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivative_mod.obj `if test -f '$(SRC_SHARE)/derivative_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/derivative_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/derivative_mod.F90'; fi`

dimensions_mod.o: $(SRC_SHARE)/dimensions_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dimensions_mod.o `test -f '$(SRC_SHARE)/dimensions_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/dimensions_mod.F90

dimensions_mod.obj: $(SRC_SHARE)/dimensions_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dimensions_mod.obj `if test -f '$(SRC_SHARE)/dimensions_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/dimensions_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/dimensions_mod.F90'; fi`

dof_mod.o: $(SRC_SHARE)/dof_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dof_mod.o `test -f '$(SRC_SHARE)/dof_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/dof_mod.F90

dof_mod.obj: $(SRC_SHARE)/dof_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dof_mod.obj `if test -f '$(SRC_SHARE)/dof_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/dof_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/dof_mod.F90'; fi`

domain_mod.o: $(SRC_SHARE)/domain_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o domain_mod.o `test -f '$(SRC_SHARE)/domain_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/domain_mod.F90

domain_mod.obj: $(SRC_SHARE)/domain_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o domain_mod.obj `if test -f '$(SRC_SHARE)/domain_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/domain_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/domain_mod.F90'; fi`

edge_mod.o: $(SRC_SHARE)/edge_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o edge_mod.o `test -f '$(SRC_SHARE)/edge_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/edge_mod.F90

edge_mod.obj: $(SRC_SHARE)/edge_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o edge_mod.obj `if test -f '$(SRC_SHARE)/edge_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/edge_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/edge_mod.F90'; fi`

element_mod.o: $(SRC_SHARE)/element_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o element_mod.o `test -f '$(SRC_SHARE)/element_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/element_mod.F90

element_mod.obj: $(SRC_SHARE)/element_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o element_mod.obj `if test -f '$(SRC_SHARE)/element_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/element_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/element_mod.F90'; fi`

gridgraph_mod.o: $(SRC_SHARE)/gridgraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridgraph_mod.o `test -f '$(SRC_SHARE)/gridgraph_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/gridgraph_mod.F90

gridgraph_mod.obj: $(SRC_SHARE)/gridgraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridgraph_mod.obj `if test -f '$(SRC_SHARE)/gridgraph_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/gridgraph_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/gridgraph_mod.F90'; fi`

hybrid_mod.o: $(SRC_SHARE)/hybrid_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hybrid_mod.o `test -f '$(SRC_SHARE)/hybrid_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/hybrid_mod.F90

hybrid_mod.obj: $(SRC_SHARE)/hybrid_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hybrid_mod.obj `if test -f '$(SRC_SHARE)/hybrid_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/hybrid_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/hybrid_mod.F90'; fi`

interp_movie_mod.o: $(SRC)/interp_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interp_movie_mod.o `test -f '$(SRC)/interp_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/interp_movie_mod.F90

interp_movie_mod.obj: $(SRC)/interp_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interp_movie_mod.obj `if test -f '$(SRC)/interp_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/interp_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/interp_movie_mod.F90'; fi`

shal_movie_mod.o: $(SRC)/shal_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shal_movie_mod.o `test -f '$(SRC)/shal_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/shal_movie_mod.F90

shal_movie_mod.obj: $(SRC)/shal_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shal_movie_mod.obj `if test -f '$(SRC)/shal_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/shal_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/shal_movie_mod.F90'; fi`

interpolate_mod.o: $(SRC_SHARE)/interpolate_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interpolate_mod.o `test -f '$(SRC_SHARE)/interpolate_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/interpolate_mod.F90

interpolate_mod.obj: $(SRC_SHARE)/interpolate_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interpolate_mod.obj `if test -f '$(SRC_SHARE)/interpolate_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/interpolate_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/interpolate_mod.F90'; fi`

kinds.o: $(SRC_SHARE)/kinds.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.o `test -f '$(SRC_SHARE)/kinds.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/kinds.F90

kinds.obj: $(SRC_SHARE)/kinds.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.obj `if test -f '$(SRC_SHARE)/kinds.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/kinds.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/kinds.F90'; fi`

ll_mod.o: $(SRC_SHARE)/ll_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o ll_mod.o `test -f '$(SRC_SHARE)/ll_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/ll_mod.F90

ll_mod.obj: $(SRC_SHARE)/ll_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o ll_mod.obj `if test -f '$(SRC_SHARE)/ll_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/ll_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/ll_mod.F90'; fi`

mass_matrix_mod.o: $(SRC_SHARE)/mass_matrix_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mass_matrix_mod.o `test -f '$(SRC_SHARE)/mass_matrix_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/mass_matrix_mod.F90

mass_matrix_mod.obj: $(SRC_SHARE)/mass_matrix_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mass_matrix_mod.obj `if test -f '$(SRC_SHARE)/mass_matrix_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/mass_matrix_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/mass_matrix_mod.F90'; fi`

metagraph_mod.o: $(SRC_SHARE)/metagraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metagraph_mod.o `test -f '$(SRC_SHARE)/metagraph_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/metagraph_mod.F90

metagraph_mod.obj: $(SRC_SHARE)/metagraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metagraph_mod.obj `if test -f '$(SRC_SHARE)/metagraph_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/metagraph_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/metagraph_mod.F90'; fi`

metis_mod.o: $(SRC_SHARE)/metis_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metis_mod.o `test -f '$(SRC_SHARE)/metis_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/metis_mod.F90

metis_mod.obj: $(SRC_SHARE)/metis_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metis_mod.obj `if test -f '$(SRC_SHARE)/metis_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/metis_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/metis_mod.F90'; fi`

mesh_mod.o: $(SRC_SHARE)/mesh_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mesh_mod.o `test -f '$(SRC_SHARE)/mesh_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/mesh_mod.F90

mesh_mod.obj: $(SRC_SHARE)/mesh_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mesh_mod.obj `if test -f '$(SRC_SHARE)/mesh_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/mesh_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/mesh_mod.F90'; fi`

namelist_mod.o: $(SRC_SHARE)/namelist_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o namelist_mod.o `test -f '$(SRC_SHARE)/namelist_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/namelist_mod.F90

namelist_mod.obj: $(SRC_SHARE)/namelist_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o namelist_mod.obj `if test -f '$(SRC_SHARE)/namelist_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/namelist_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/namelist_mod.F90'; fi`

parallel_mod.o: $(SRC_SHARE)/parallel_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallel_mod.o `test -f '$(SRC_SHARE)/parallel_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/parallel_mod.F90

parallel_mod.obj: $(SRC_SHARE)/parallel_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallel_mod.obj `if test -f '$(SRC_SHARE)/parallel_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/parallel_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/parallel_mod.F90'; fi`

params_mod.o: $(SRC_SHARE)/params_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o params_mod.o `test -f '$(SRC_SHARE)/params_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/params_mod.F90

params_mod.obj: $(SRC_SHARE)/params_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o params_mod.obj `if test -f '$(SRC_SHARE)/params_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/params_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/params_mod.F90'; fi`

physical_constants.o: $(SRC_SHARE)/physical_constants.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o physical_constants.o `test -f '$(SRC_SHARE)/physical_constants.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/physical_constants.F90

physical_constants.obj: $(SRC_SHARE)/physical_constants.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o physical_constants.obj `if test -f '$(SRC_SHARE)/physical_constants.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/physical_constants.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/physical_constants.F90'; fi`

quadrature_mod.o: $(SRC_SHARE)/quadrature_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o quadrature_mod.o `test -f '$(SRC_SHARE)/quadrature_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/quadrature_mod.F90

quadrature_mod.obj: $(SRC_SHARE)/quadrature_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o quadrature_mod.obj `if test -f '$(SRC_SHARE)/quadrature_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/quadrature_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/quadrature_mod.F90'; fi`

reduction_mod.o: $(SRC_SHARE)/reduction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o reduction_mod.o `test -f '$(SRC_SHARE)/reduction_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/reduction_mod.F90

reduction_mod.obj: $(SRC_SHARE)/reduction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o reduction_mod.obj `if test -f '$(SRC_SHARE)/reduction_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/reduction_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/reduction_mod.F90'; fi`

repro_sum_mod.o: $(SRC)/repro_sum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o repro_sum_mod.o `test -f '$(SRC)/repro_sum_mod.F90' || echo '$(srcdir)/'`$(SRC)/repro_sum_mod.F90

repro_sum_mod.obj: $(SRC)/repro_sum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o repro_sum_mod.obj `if test -f '$(SRC)/repro_sum_mod.F90'; then $(CYGPATH_W) '$(SRC)/repro_sum_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/repro_sum_mod.F90'; fi`

restart_mod.o: $(SRC)/restart_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_mod.o `test -f '$(SRC)/restart_mod.F90' || echo '$(srcdir)/'`$(SRC)/restart_mod.F90

restart_mod.obj: $(SRC)/restart_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_mod.obj `if test -f '$(SRC)/restart_mod.F90'; then $(CYGPATH_W) '$(SRC)/restart_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/restart_mod.F90'; fi`

restart_io_mod.o: $(SRC)/restart_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_io_mod.o `test -f '$(SRC)/restart_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/restart_io_mod.F90

restart_io_mod.obj: $(SRC)/restart_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_io_mod.obj `if test -f '$(SRC)/restart_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/restart_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/restart_io_mod.F90'; fi`

schedule_mod.o: $(SRC_SHARE)/schedule_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o schedule_mod.o `test -f '$(SRC_SHARE)/schedule_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/schedule_mod.F90

schedule_mod.obj: $(SRC_SHARE)/schedule_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o schedule_mod.obj `if test -f '$(SRC_SHARE)/schedule_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/schedule_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/schedule_mod.F90'; fi`

spacecurve_mod.o: $(SRC_SHARE)/spacecurve_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spacecurve_mod.o `test -f '$(SRC_SHARE)/spacecurve_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/spacecurve_mod.F90

spacecurve_mod.obj: $(SRC_SHARE)/spacecurve_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spacecurve_mod.obj `if test -f '$(SRC_SHARE)/spacecurve_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/spacecurve_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/spacecurve_mod.F90'; fi`

surfaces_mod.o: $(SRC)/surfaces_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o surfaces_mod.o `test -f '$(SRC)/surfaces_mod.F90' || echo '$(srcdir)/'`$(SRC)/surfaces_mod.F90

surfaces_mod.obj: $(SRC)/surfaces_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o surfaces_mod.obj `if test -f '$(SRC)/surfaces_mod.F90'; then $(CYGPATH_W) '$(SRC)/surfaces_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/surfaces_mod.F90'; fi`

state_mod.o: $(SRC)/state_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o state_mod.o `test -f '$(SRC)/state_mod.F90' || echo '$(srcdir)/'`$(SRC)/state_mod.F90

state_mod.obj: $(SRC)/state_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o state_mod.obj `if test -f '$(SRC)/state_mod.F90'; then $(CYGPATH_W) '$(SRC)/state_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/state_mod.F90'; fi`

thread_mod.o: $(SRC_SHARE)/thread_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o thread_mod.o `test -f '$(SRC_SHARE)/thread_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/thread_mod.F90

thread_mod.obj: $(SRC_SHARE)/thread_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o thread_mod.obj `if test -f '$(SRC_SHARE)/thread_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/thread_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/thread_mod.F90'; fi`

time_mod.o: $(SRC_SHARE)/time_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o time_mod.o `test -f '$(SRC_SHARE)/time_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/time_mod.F90

time_mod.obj: $(SRC_SHARE)/time_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o time_mod.obj `if test -f '$(SRC_SHARE)/time_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/time_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/time_mod.F90'; fi`

viscosity_mod.o: $(SRC_SHARE)/viscosity_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o viscosity_mod.o `test -f '$(SRC_SHARE)/viscosity_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/viscosity_mod.F90

viscosity_mod.obj: $(SRC_SHARE)/viscosity_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o viscosity_mod.obj `if test -f '$(SRC_SHARE)/viscosity_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/viscosity_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/viscosity_mod.F90'; fi`

global_norms_mod.o: $(SRC_SHARE)/global_norms_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o global_norms_mod.o `test -f '$(SRC_SHARE)/global_norms_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/global_norms_mod.F90

global_norms_mod.obj: $(SRC_SHARE)/global_norms_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o global_norms_mod.obj `if test -f '$(SRC_SHARE)/global_norms_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/global_norms_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/global_norms_mod.F90'; fi`

pio_io_mod.o: $(SRC)/pio_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o pio_io_mod.o `test -f '$(SRC)/pio_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/pio_io_mod.F90

pio_io_mod.obj: $(SRC)/pio_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o pio_io_mod.obj `if test -f '$(SRC)/pio_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/pio_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/pio_io_mod.F90'; fi`

shr_kind_mod.o: $(UTILS)/shr_kind_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_kind_mod.o `test -f '$(UTILS)/shr_kind_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_kind_mod.F90

shr_kind_mod.obj: $(UTILS)/shr_kind_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_kind_mod.obj `if test -f '$(UTILS)/shr_kind_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_kind_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_kind_mod.F90'; fi`

shr_mpi_mod.o: $(UTILS)/shr_mpi_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_mpi_mod.o `test -f '$(UTILS)/shr_mpi_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_mpi_mod.F90

shr_mpi_mod.obj: $(UTILS)/shr_mpi_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_mpi_mod.obj `if test -f '$(UTILS)/shr_mpi_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_mpi_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_mpi_mod.F90'; fi`

shr_sys_mod.o: $(UTILS)/shr_sys_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_sys_mod.o `test -f '$(UTILS)/shr_sys_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_sys_mod.F90

shr_sys_mod.obj: $(UTILS)/shr_sys_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_sys_mod.obj `if test -f '$(UTILS)/shr_sys_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_sys_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_sys_mod.F90'; fi`

shr_file_mod.o: $(UTILS)/shr_file_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_file_mod.o `test -f '$(UTILS)/shr_file_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_file_mod.F90

shr_file_mod.obj: $(UTILS)/shr_file_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_file_mod.obj `if test -f '$(UTILS)/shr_file_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_file_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_file_mod.F90'; fi`

shr_vmath_mod.o: $(UTILS)/shr_vmath_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_vmath_mod.o `test -f '$(UTILS)/shr_vmath_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_vmath_mod.F90

shr_vmath_mod.obj: $(UTILS)/shr_vmath_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_vmath_mod.obj `if test -f '$(UTILS)/shr_vmath_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_vmath_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_vmath_mod.F90'; fi`

spelt_main.o: $(SRC)/spelt_main.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_main.o `test -f '$(SRC)/spelt_main.F90' || echo '$(srcdir)/'`$(SRC)/spelt_main.F90

spelt_main.obj: $(SRC)/spelt_main.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_main.obj `if test -f '$(SRC)/spelt_main.F90'; then $(CYGPATH_W) '$(SRC)/spelt_main.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/spelt_main.F90'; fi`
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkdir_p) $(distdir)/$(SRC_SHARE) $(distdir)/../../helpers
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES clean-local \
	ctags dist dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-local distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLIBRARIES


#
# Automatically generated module dependencies
#

depends: $(DEPENDS)
	@echo "Done updating dependencies"
	$(CPP) -DHAVE_CONFIG_H -I.  $(SRC)/spelt_main.F90 | $(AWK) -f $(FDEPENDS) -v NAME=$(basename $(notdir $(SRC)/spelt_main.F90)) -v SUF=$(suffix $(SRC)/spelt_main.F90)  > spelt_main.d

%$(DEPSUF): %.F90
		@echo 'Making dependencies for' $< '-->' `basename $@`
		$(CPP) -DHAVE_CONFIG_H -I. $< | $(AWK) -f $(FDEPENDS) -v NAME=$(basename $(notdir $<)) -v SUF=$(suffix $<)  > `basename $@`

clean-local:
					rm -rf *.mod 

clean-depends:
					rm -rf *.d *~

distclean-local: clean-depends

 -include *.d
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
