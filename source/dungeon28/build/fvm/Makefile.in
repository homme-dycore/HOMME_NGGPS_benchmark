# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = fvm$(EXEEXT)
subdir = .
DIST_COMMON = $(am__configure_deps) $(srcdir)/../../helpers/install-sh \
	$(srcdir)/../../helpers/missing $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure ../../helpers/depcomp \
	../../helpers/install-sh ../../helpers/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libhomme_fvm_a_AR = $(AR) $(ARFLAGS)
libhomme_fvm_a_LIBADD =
am__objects_1 = bndry_mod.$(OBJEXT) fvm_mod.$(OBJEXT) \
	spelt_mod.$(OBJEXT) fvm_bench_mod.$(OBJEXT) \
	fvm_analytic_mod.$(OBJEXT) fvm_bsp_mod.$(OBJEXT) \
	fvm_control_volume_mod.$(OBJEXT) \
	fvm_ghostcell_mod.$(OBJEXT) fvm_init_mod.$(OBJEXT) \
	fvm_reconstruction_mod.$(OBJEXT) \
	fvm_line_integrals_flux_mod.$(OBJEXT) \
	fvm_line_integrals_mod.$(OBJEXT) \
	fvm_transformation_mod.$(OBJEXT) cg_mod.$(OBJEXT) \
	checksum_mod.$(OBJEXT) netcdf_io_mod.$(OBJEXT) \
	common_movie_mod.$(OBJEXT) common_io_mod.$(OBJEXT) \
	control_mod.$(OBJEXT) coordinate_systems_mod.$(OBJEXT) \
	cube_mod.$(OBJEXT) derivative_mod.$(OBJEXT) \
	dimensions_mod.$(OBJEXT) dof_mod.$(OBJEXT) \
	domain_mod.$(OBJEXT) edge_mod.$(OBJEXT) element_mod.$(OBJEXT) \
	gridgraph_mod.$(OBJEXT) hybrid_mod.$(OBJEXT) \
	interp_movie_mod.$(OBJEXT) netcdf_io_mod.$(OBJEXT) \
	shal_movie_mod.$(OBJEXT) interpolate_mod.$(OBJEXT) \
	kinds.$(OBJEXT) ll_mod.$(OBJEXT) mass_matrix_mod.$(OBJEXT) \
	metagraph_mod.$(OBJEXT) metis_mod.$(OBJEXT) mesh_mod.$(OBJEXT) \
	namelist_mod.$(OBJEXT) netcdf_io_mod.$(OBJEXT) \
	parallel_mod.$(OBJEXT) params_mod.$(OBJEXT) \
	physical_constants.$(OBJEXT) quadrature_mod.$(OBJEXT) \
	reduction_mod.$(OBJEXT) repro_sum_mod.$(OBJEXT) \
	restart_mod.$(OBJEXT) restart_io_mod.$(OBJEXT) \
	schedule_mod.$(OBJEXT) spacecurve_mod.$(OBJEXT) \
	surfaces_mod.$(OBJEXT) state_mod.$(OBJEXT) \
	repro_sum_mod.$(OBJEXT) thread_mod.$(OBJEXT) \
	time_mod.$(OBJEXT) viscosity_mod.$(OBJEXT) \
	global_norms_mod.$(OBJEXT) pio_io_mod.$(OBJEXT) \
	shr_kind_mod.$(OBJEXT) shr_mpi_mod.$(OBJEXT) \
	shr_sys_mod.$(OBJEXT) shr_file_mod.$(OBJEXT) \
	shr_vmath_mod.$(OBJEXT) unit_tests_mod.$(OBJEXT)
am_libhomme_fvm_a_OBJECTS = $(am__objects_1)
libhomme_fvm_a_OBJECTS = $(am_libhomme_fvm_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_fvm_OBJECTS = fvm_main.$(OBJEXT)
fvm_OBJECTS = $(am_fvm_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
fvm_DEPENDENCIES = ./libhomme_fvm.a $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
SOURCES = $(libhomme_fvm_a_SOURCES) $(fvm_SOURCES)
DIST_SOURCES = $(libhomme_fvm_a_SOURCES) $(fvm_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = 
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
HOMME_INCLUDE = @HOMME_INCLUDE@
HOMME_LDFLAGS = @HOMME_LDFLAGS@
HOMME_LIBS = @HOMME_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LOCAL_BLAS_LOCATION = @LOCAL_BLAS_LOCATION@
LOCAL_LAPACK_LOCATION = @LOCAL_LAPACK_LOCATION@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MY_DEFS = @MY_DEFS@
NC = @NC@
NP = @NP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PLEV = @PLEV@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign
# Relevant Directories within the HOMME repository
# holding source files needed for building the library
# and executable fvm.
SRC = ../../src
SRC_SHARE = $(SRC)/share
UTILS = ../../utils/csm_share
INCLUDES = -I../../utils/pio -I../../utils/timing -I ../../src $(HOMME_INCLUDE)
AM_FCFLAGS = $(MY_DEFS)
AM_LDFLAGS = $(LOCAL_BLAS_LOCATION) $(LOCAL_LAPACK_LOCATION) $(HOMME_LDFLAGS)
SRCS_F90 = $(SRC_SHARE)/bndry_mod.F90 \
			$(SRC_SHARE)/fvm_mod.F90 \
			$(SRC_SHARE)/spelt_mod.F90 \
			$(SRC)/fvm_bench_mod.F90 \
			$(SRC_SHARE)/fvm_analytic_mod.F90 \
			$(SRC)/fvm_bsp_mod.F90 \
			$(SRC_SHARE)/fvm_control_volume_mod.F90 \
			$(SRC)/fvm_ghostcell_mod.F90 \
			$(SRC)/fvm_init_mod.F90 \
			$(SRC_SHARE)/fvm_reconstruction_mod.F90 \
			$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90 \
			$(SRC_SHARE)/fvm_line_integrals_mod.F90 \
			$(SRC)/fvm_transformation_mod.F90 \
		        $(SRC_SHARE)/cg_mod.F90 \
		        $(SRC)/checksum_mod.F90 \
		        $(SRC)/netcdf_io_mod.F90 \
		        $(SRC)/common_movie_mod.F90 \
		        $(SRC)/common_io_mod.F90 \
		        $(SRC_SHARE)/control_mod.F90 \
		        $(SRC_SHARE)/coordinate_systems_mod.F90 \
		        $(SRC_SHARE)/cube_mod.F90 \
		        $(SRC_SHARE)/derivative_mod.F90 \
	          	$(SRC_SHARE)/dimensions_mod.F90 \
	          	$(SRC_SHARE)/dof_mod.F90 \
	          	$(SRC_SHARE)/domain_mod.F90 \
		        $(SRC_SHARE)/edge_mod.F90 \
		  	$(SRC_SHARE)/element_mod.F90 \
		        $(SRC_SHARE)/gridgraph_mod.F90 \
		        $(SRC_SHARE)/hybrid_mod.F90 \
			$(SRC)/interp_movie_mod.F90 \
			$(SRC)/netcdf_io_mod.F90 \
			$(SRC)/shal_movie_mod.F90 \
			$(SRC_SHARE)/interpolate_mod.F90 \
			$(SRC_SHARE)/kinds.F90 \
			$(SRC_SHARE)/ll_mod.F90 \
			$(SRC_SHARE)/mass_matrix_mod.F90 \
		        $(SRC_SHARE)/metagraph_mod.F90 \
		        $(SRC_SHARE)/metis_mod.F90 \
		        $(SRC_SHARE)/mesh_mod.F90 \
		        $(SRC_SHARE)/namelist_mod.F90 \
		        $(SRC)/netcdf_io_mod.F90 \
		        $(SRC_SHARE)/parallel_mod.F90 \
		        $(SRC_SHARE)/params_mod.F90 \
		        $(SRC_SHARE)/physical_constants.F90 \
		        $(SRC_SHARE)/quadrature_mod.F90 \
		        $(SRC_SHARE)/reduction_mod.F90 \
		        $(SRC)/repro_sum_mod.F90 \
		        $(SRC)/restart_mod.F90 \
		        $(SRC)/restart_io_mod.F90 \
		        $(SRC_SHARE)/schedule_mod.F90 \
		        $(SRC_SHARE)/spacecurve_mod.F90 \
		        $(SRC)/surfaces_mod.F90 \
		        $(SRC)/state_mod.F90 \
			      $(SRC)/repro_sum_mod.F90 \
		        $(SRC_SHARE)/thread_mod.F90 \
		        $(SRC_SHARE)/time_mod.F90 \
		        $(SRC_SHARE)/viscosity_mod.F90 \
		        $(SRC_SHARE)/unit_tests_mod.F90 \
		        $(SRC_SHARE)/global_norms_mod.F90 \
		        $(SRC)/pio_io_mod.F90 \
		        $(UTILS)/shr_kind_mod.F90 \
        		$(UTILS)/shr_mpi_mod.F90 \
        		$(UTILS)/shr_sys_mod.F90 \
        		$(UTILS)/shr_file_mod.F90 \
        		$(UTILS)/shr_vmath_mod.F90 

FDEPENDS = ../../helpers/fdepends.awk
DEPSUF = .d
DEPENDS := $(SRCS_F90:.F90=$(DEPSUF))
lib_LIBRARIES = libhomme_fvm.a
libhomme_fvm_a_SOURCES = $(SRCS_F90)	 
fvm_SOURCES = $(SRC)/fvm_main.F90
fvm_LDADD = ./libhomme_fvm.a \
					-L../../utils/pio -lpio \
					-L../../utils/timing -ltiming \
					$(AM_LDFLAGS) \
					$(HOMME_LIBS)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F90 .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libhomme_fvm.a: $(libhomme_fvm_a_OBJECTS) $(libhomme_fvm_a_DEPENDENCIES) 
	-rm -f libhomme_fvm.a
	$(libhomme_fvm_a_AR) libhomme_fvm.a $(libhomme_fvm_a_OBJECTS) $(libhomme_fvm_a_LIBADD)
	$(RANLIB) libhomme_fvm.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
fvm$(EXEEXT): $(fvm_OBJECTS) $(fvm_DEPENDENCIES) 
	@rm -f fvm$(EXEEXT)
	$(FCLINK) $(fvm_OBJECTS) $(fvm_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.F90.o:
	$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

bndry_mod.o: $(SRC_SHARE)/bndry_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bndry_mod.o `test -f '$(SRC_SHARE)/bndry_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/bndry_mod.F90

bndry_mod.obj: $(SRC_SHARE)/bndry_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bndry_mod.obj `if test -f '$(SRC_SHARE)/bndry_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/bndry_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/bndry_mod.F90'; fi`

fvm_mod.o: $(SRC_SHARE)/fvm_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_mod.o `test -f '$(SRC_SHARE)/fvm_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_mod.F90

fvm_mod.obj: $(SRC_SHARE)/fvm_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_mod.obj `if test -f '$(SRC_SHARE)/fvm_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_mod.F90'; fi`

spelt_mod.o: $(SRC_SHARE)/spelt_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_mod.o `test -f '$(SRC_SHARE)/spelt_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/spelt_mod.F90

spelt_mod.obj: $(SRC_SHARE)/spelt_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spelt_mod.obj `if test -f '$(SRC_SHARE)/spelt_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/spelt_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/spelt_mod.F90'; fi`

fvm_bench_mod.o: $(SRC)/fvm_bench_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bench_mod.o `test -f '$(SRC)/fvm_bench_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_bench_mod.F90

fvm_bench_mod.obj: $(SRC)/fvm_bench_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bench_mod.obj `if test -f '$(SRC)/fvm_bench_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_bench_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_bench_mod.F90'; fi`

fvm_analytic_mod.o: $(SRC_SHARE)/fvm_analytic_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_analytic_mod.o `test -f '$(SRC_SHARE)/fvm_analytic_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_analytic_mod.F90

fvm_analytic_mod.obj: $(SRC_SHARE)/fvm_analytic_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_analytic_mod.obj `if test -f '$(SRC_SHARE)/fvm_analytic_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_analytic_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_analytic_mod.F90'; fi`

fvm_bsp_mod.o: $(SRC)/fvm_bsp_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bsp_mod.o `test -f '$(SRC)/fvm_bsp_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_bsp_mod.F90

fvm_bsp_mod.obj: $(SRC)/fvm_bsp_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_bsp_mod.obj `if test -f '$(SRC)/fvm_bsp_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_bsp_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_bsp_mod.F90'; fi`

fvm_control_volume_mod.o: $(SRC_SHARE)/fvm_control_volume_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_control_volume_mod.o `test -f '$(SRC_SHARE)/fvm_control_volume_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_control_volume_mod.F90

fvm_control_volume_mod.obj: $(SRC_SHARE)/fvm_control_volume_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_control_volume_mod.obj `if test -f '$(SRC_SHARE)/fvm_control_volume_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_control_volume_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_control_volume_mod.F90'; fi`

fvm_ghostcell_mod.o: $(SRC)/fvm_ghostcell_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_ghostcell_mod.o `test -f '$(SRC)/fvm_ghostcell_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_ghostcell_mod.F90

fvm_ghostcell_mod.obj: $(SRC)/fvm_ghostcell_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_ghostcell_mod.obj `if test -f '$(SRC)/fvm_ghostcell_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_ghostcell_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_ghostcell_mod.F90'; fi`

fvm_init_mod.o: $(SRC)/fvm_init_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_init_mod.o `test -f '$(SRC)/fvm_init_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_init_mod.F90

fvm_init_mod.obj: $(SRC)/fvm_init_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_init_mod.obj `if test -f '$(SRC)/fvm_init_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_init_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_init_mod.F90'; fi`

fvm_reconstruction_mod.o: $(SRC_SHARE)/fvm_reconstruction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_reconstruction_mod.o `test -f '$(SRC_SHARE)/fvm_reconstruction_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_reconstruction_mod.F90

fvm_reconstruction_mod.obj: $(SRC_SHARE)/fvm_reconstruction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_reconstruction_mod.obj `if test -f '$(SRC_SHARE)/fvm_reconstruction_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_reconstruction_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_reconstruction_mod.F90'; fi`

fvm_line_integrals_flux_mod.o: $(SRC_SHARE)/fvm_line_integrals_flux_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_line_integrals_flux_mod.o `test -f '$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90

fvm_line_integrals_flux_mod.obj: $(SRC_SHARE)/fvm_line_integrals_flux_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_line_integrals_flux_mod.obj `if test -f '$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_line_integrals_flux_mod.F90'; fi`

fvm_line_integrals_mod.o: $(SRC_SHARE)/fvm_line_integrals_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_line_integrals_mod.o `test -f '$(SRC_SHARE)/fvm_line_integrals_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/fvm_line_integrals_mod.F90

fvm_line_integrals_mod.obj: $(SRC_SHARE)/fvm_line_integrals_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_line_integrals_mod.obj `if test -f '$(SRC_SHARE)/fvm_line_integrals_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/fvm_line_integrals_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/fvm_line_integrals_mod.F90'; fi`

fvm_transformation_mod.o: $(SRC)/fvm_transformation_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_transformation_mod.o `test -f '$(SRC)/fvm_transformation_mod.F90' || echo '$(srcdir)/'`$(SRC)/fvm_transformation_mod.F90

fvm_transformation_mod.obj: $(SRC)/fvm_transformation_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_transformation_mod.obj `if test -f '$(SRC)/fvm_transformation_mod.F90'; then $(CYGPATH_W) '$(SRC)/fvm_transformation_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_transformation_mod.F90'; fi`

cg_mod.o: $(SRC_SHARE)/cg_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cg_mod.o `test -f '$(SRC_SHARE)/cg_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/cg_mod.F90

cg_mod.obj: $(SRC_SHARE)/cg_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cg_mod.obj `if test -f '$(SRC_SHARE)/cg_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/cg_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/cg_mod.F90'; fi`

checksum_mod.o: $(SRC)/checksum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o checksum_mod.o `test -f '$(SRC)/checksum_mod.F90' || echo '$(srcdir)/'`$(SRC)/checksum_mod.F90

checksum_mod.obj: $(SRC)/checksum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o checksum_mod.obj `if test -f '$(SRC)/checksum_mod.F90'; then $(CYGPATH_W) '$(SRC)/checksum_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/checksum_mod.F90'; fi`

netcdf_io_mod.o: $(SRC)/netcdf_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o netcdf_io_mod.o `test -f '$(SRC)/netcdf_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/netcdf_io_mod.F90

netcdf_io_mod.obj: $(SRC)/netcdf_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o netcdf_io_mod.obj `if test -f '$(SRC)/netcdf_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/netcdf_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/netcdf_io_mod.F90'; fi`

common_movie_mod.o: $(SRC)/common_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_movie_mod.o `test -f '$(SRC)/common_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/common_movie_mod.F90

common_movie_mod.obj: $(SRC)/common_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_movie_mod.obj `if test -f '$(SRC)/common_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/common_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/common_movie_mod.F90'; fi`

common_io_mod.o: $(SRC)/common_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_io_mod.o `test -f '$(SRC)/common_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/common_io_mod.F90

common_io_mod.obj: $(SRC)/common_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o common_io_mod.obj `if test -f '$(SRC)/common_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/common_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/common_io_mod.F90'; fi`

control_mod.o: $(SRC_SHARE)/control_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o control_mod.o `test -f '$(SRC_SHARE)/control_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/control_mod.F90

control_mod.obj: $(SRC_SHARE)/control_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o control_mod.obj `if test -f '$(SRC_SHARE)/control_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/control_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/control_mod.F90'; fi`

coordinate_systems_mod.o: $(SRC_SHARE)/coordinate_systems_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o coordinate_systems_mod.o `test -f '$(SRC_SHARE)/coordinate_systems_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/coordinate_systems_mod.F90

coordinate_systems_mod.obj: $(SRC_SHARE)/coordinate_systems_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o coordinate_systems_mod.obj `if test -f '$(SRC_SHARE)/coordinate_systems_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/coordinate_systems_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/coordinate_systems_mod.F90'; fi`

cube_mod.o: $(SRC_SHARE)/cube_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cube_mod.o `test -f '$(SRC_SHARE)/cube_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/cube_mod.F90

cube_mod.obj: $(SRC_SHARE)/cube_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o cube_mod.obj `if test -f '$(SRC_SHARE)/cube_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/cube_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/cube_mod.F90'; fi`

derivative_mod.o: $(SRC_SHARE)/derivative_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivative_mod.o `test -f '$(SRC_SHARE)/derivative_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/derivative_mod.F90

derivative_mod.obj: $(SRC_SHARE)/derivative_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o derivative_mod.obj `if test -f '$(SRC_SHARE)/derivative_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/derivative_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/derivative_mod.F90'; fi`

dimensions_mod.o: $(SRC_SHARE)/dimensions_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dimensions_mod.o `test -f '$(SRC_SHARE)/dimensions_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/dimensions_mod.F90

dimensions_mod.obj: $(SRC_SHARE)/dimensions_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dimensions_mod.obj `if test -f '$(SRC_SHARE)/dimensions_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/dimensions_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/dimensions_mod.F90'; fi`

dof_mod.o: $(SRC_SHARE)/dof_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dof_mod.o `test -f '$(SRC_SHARE)/dof_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/dof_mod.F90

dof_mod.obj: $(SRC_SHARE)/dof_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dof_mod.obj `if test -f '$(SRC_SHARE)/dof_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/dof_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/dof_mod.F90'; fi`

domain_mod.o: $(SRC_SHARE)/domain_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o domain_mod.o `test -f '$(SRC_SHARE)/domain_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/domain_mod.F90

domain_mod.obj: $(SRC_SHARE)/domain_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o domain_mod.obj `if test -f '$(SRC_SHARE)/domain_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/domain_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/domain_mod.F90'; fi`

edge_mod.o: $(SRC_SHARE)/edge_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o edge_mod.o `test -f '$(SRC_SHARE)/edge_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/edge_mod.F90

edge_mod.obj: $(SRC_SHARE)/edge_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o edge_mod.obj `if test -f '$(SRC_SHARE)/edge_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/edge_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/edge_mod.F90'; fi`

element_mod.o: $(SRC_SHARE)/element_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o element_mod.o `test -f '$(SRC_SHARE)/element_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/element_mod.F90

element_mod.obj: $(SRC_SHARE)/element_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o element_mod.obj `if test -f '$(SRC_SHARE)/element_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/element_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/element_mod.F90'; fi`

gridgraph_mod.o: $(SRC_SHARE)/gridgraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridgraph_mod.o `test -f '$(SRC_SHARE)/gridgraph_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/gridgraph_mod.F90

gridgraph_mod.obj: $(SRC_SHARE)/gridgraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o gridgraph_mod.obj `if test -f '$(SRC_SHARE)/gridgraph_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/gridgraph_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/gridgraph_mod.F90'; fi`

hybrid_mod.o: $(SRC_SHARE)/hybrid_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hybrid_mod.o `test -f '$(SRC_SHARE)/hybrid_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/hybrid_mod.F90

hybrid_mod.obj: $(SRC_SHARE)/hybrid_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hybrid_mod.obj `if test -f '$(SRC_SHARE)/hybrid_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/hybrid_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/hybrid_mod.F90'; fi`

interp_movie_mod.o: $(SRC)/interp_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interp_movie_mod.o `test -f '$(SRC)/interp_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/interp_movie_mod.F90

interp_movie_mod.obj: $(SRC)/interp_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interp_movie_mod.obj `if test -f '$(SRC)/interp_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/interp_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/interp_movie_mod.F90'; fi`

shal_movie_mod.o: $(SRC)/shal_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shal_movie_mod.o `test -f '$(SRC)/shal_movie_mod.F90' || echo '$(srcdir)/'`$(SRC)/shal_movie_mod.F90

shal_movie_mod.obj: $(SRC)/shal_movie_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shal_movie_mod.obj `if test -f '$(SRC)/shal_movie_mod.F90'; then $(CYGPATH_W) '$(SRC)/shal_movie_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/shal_movie_mod.F90'; fi`

interpolate_mod.o: $(SRC_SHARE)/interpolate_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interpolate_mod.o `test -f '$(SRC_SHARE)/interpolate_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/interpolate_mod.F90

interpolate_mod.obj: $(SRC_SHARE)/interpolate_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interpolate_mod.obj `if test -f '$(SRC_SHARE)/interpolate_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/interpolate_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/interpolate_mod.F90'; fi`

kinds.o: $(SRC_SHARE)/kinds.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.o `test -f '$(SRC_SHARE)/kinds.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/kinds.F90

kinds.obj: $(SRC_SHARE)/kinds.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.obj `if test -f '$(SRC_SHARE)/kinds.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/kinds.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/kinds.F90'; fi`

ll_mod.o: $(SRC_SHARE)/ll_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o ll_mod.o `test -f '$(SRC_SHARE)/ll_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/ll_mod.F90

ll_mod.obj: $(SRC_SHARE)/ll_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o ll_mod.obj `if test -f '$(SRC_SHARE)/ll_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/ll_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/ll_mod.F90'; fi`

mass_matrix_mod.o: $(SRC_SHARE)/mass_matrix_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mass_matrix_mod.o `test -f '$(SRC_SHARE)/mass_matrix_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/mass_matrix_mod.F90

mass_matrix_mod.obj: $(SRC_SHARE)/mass_matrix_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mass_matrix_mod.obj `if test -f '$(SRC_SHARE)/mass_matrix_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/mass_matrix_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/mass_matrix_mod.F90'; fi`

metagraph_mod.o: $(SRC_SHARE)/metagraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metagraph_mod.o `test -f '$(SRC_SHARE)/metagraph_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/metagraph_mod.F90

metagraph_mod.obj: $(SRC_SHARE)/metagraph_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metagraph_mod.obj `if test -f '$(SRC_SHARE)/metagraph_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/metagraph_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/metagraph_mod.F90'; fi`

metis_mod.o: $(SRC_SHARE)/metis_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metis_mod.o `test -f '$(SRC_SHARE)/metis_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/metis_mod.F90

metis_mod.obj: $(SRC_SHARE)/metis_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o metis_mod.obj `if test -f '$(SRC_SHARE)/metis_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/metis_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/metis_mod.F90'; fi`

mesh_mod.o: $(SRC_SHARE)/mesh_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mesh_mod.o `test -f '$(SRC_SHARE)/mesh_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/mesh_mod.F90

mesh_mod.obj: $(SRC_SHARE)/mesh_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o mesh_mod.obj `if test -f '$(SRC_SHARE)/mesh_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/mesh_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/mesh_mod.F90'; fi`

namelist_mod.o: $(SRC_SHARE)/namelist_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o namelist_mod.o `test -f '$(SRC_SHARE)/namelist_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/namelist_mod.F90

namelist_mod.obj: $(SRC_SHARE)/namelist_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o namelist_mod.obj `if test -f '$(SRC_SHARE)/namelist_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/namelist_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/namelist_mod.F90'; fi`

parallel_mod.o: $(SRC_SHARE)/parallel_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallel_mod.o `test -f '$(SRC_SHARE)/parallel_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/parallel_mod.F90

parallel_mod.obj: $(SRC_SHARE)/parallel_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallel_mod.obj `if test -f '$(SRC_SHARE)/parallel_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/parallel_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/parallel_mod.F90'; fi`

params_mod.o: $(SRC_SHARE)/params_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o params_mod.o `test -f '$(SRC_SHARE)/params_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/params_mod.F90

params_mod.obj: $(SRC_SHARE)/params_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o params_mod.obj `if test -f '$(SRC_SHARE)/params_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/params_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/params_mod.F90'; fi`

physical_constants.o: $(SRC_SHARE)/physical_constants.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o physical_constants.o `test -f '$(SRC_SHARE)/physical_constants.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/physical_constants.F90

physical_constants.obj: $(SRC_SHARE)/physical_constants.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o physical_constants.obj `if test -f '$(SRC_SHARE)/physical_constants.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/physical_constants.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/physical_constants.F90'; fi`

quadrature_mod.o: $(SRC_SHARE)/quadrature_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o quadrature_mod.o `test -f '$(SRC_SHARE)/quadrature_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/quadrature_mod.F90

quadrature_mod.obj: $(SRC_SHARE)/quadrature_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o quadrature_mod.obj `if test -f '$(SRC_SHARE)/quadrature_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/quadrature_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/quadrature_mod.F90'; fi`

reduction_mod.o: $(SRC_SHARE)/reduction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o reduction_mod.o `test -f '$(SRC_SHARE)/reduction_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/reduction_mod.F90

reduction_mod.obj: $(SRC_SHARE)/reduction_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o reduction_mod.obj `if test -f '$(SRC_SHARE)/reduction_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/reduction_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/reduction_mod.F90'; fi`

repro_sum_mod.o: $(SRC)/repro_sum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o repro_sum_mod.o `test -f '$(SRC)/repro_sum_mod.F90' || echo '$(srcdir)/'`$(SRC)/repro_sum_mod.F90

repro_sum_mod.obj: $(SRC)/repro_sum_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o repro_sum_mod.obj `if test -f '$(SRC)/repro_sum_mod.F90'; then $(CYGPATH_W) '$(SRC)/repro_sum_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/repro_sum_mod.F90'; fi`

restart_mod.o: $(SRC)/restart_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_mod.o `test -f '$(SRC)/restart_mod.F90' || echo '$(srcdir)/'`$(SRC)/restart_mod.F90

restart_mod.obj: $(SRC)/restart_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_mod.obj `if test -f '$(SRC)/restart_mod.F90'; then $(CYGPATH_W) '$(SRC)/restart_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/restart_mod.F90'; fi`

restart_io_mod.o: $(SRC)/restart_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_io_mod.o `test -f '$(SRC)/restart_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/restart_io_mod.F90

restart_io_mod.obj: $(SRC)/restart_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o restart_io_mod.obj `if test -f '$(SRC)/restart_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/restart_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/restart_io_mod.F90'; fi`

schedule_mod.o: $(SRC_SHARE)/schedule_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o schedule_mod.o `test -f '$(SRC_SHARE)/schedule_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/schedule_mod.F90

schedule_mod.obj: $(SRC_SHARE)/schedule_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o schedule_mod.obj `if test -f '$(SRC_SHARE)/schedule_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/schedule_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/schedule_mod.F90'; fi`

spacecurve_mod.o: $(SRC_SHARE)/spacecurve_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spacecurve_mod.o `test -f '$(SRC_SHARE)/spacecurve_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/spacecurve_mod.F90

spacecurve_mod.obj: $(SRC_SHARE)/spacecurve_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o spacecurve_mod.obj `if test -f '$(SRC_SHARE)/spacecurve_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/spacecurve_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/spacecurve_mod.F90'; fi`

surfaces_mod.o: $(SRC)/surfaces_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o surfaces_mod.o `test -f '$(SRC)/surfaces_mod.F90' || echo '$(srcdir)/'`$(SRC)/surfaces_mod.F90

surfaces_mod.obj: $(SRC)/surfaces_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o surfaces_mod.obj `if test -f '$(SRC)/surfaces_mod.F90'; then $(CYGPATH_W) '$(SRC)/surfaces_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/surfaces_mod.F90'; fi`

state_mod.o: $(SRC)/state_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o state_mod.o `test -f '$(SRC)/state_mod.F90' || echo '$(srcdir)/'`$(SRC)/state_mod.F90

state_mod.obj: $(SRC)/state_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o state_mod.obj `if test -f '$(SRC)/state_mod.F90'; then $(CYGPATH_W) '$(SRC)/state_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/state_mod.F90'; fi`

thread_mod.o: $(SRC_SHARE)/thread_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o thread_mod.o `test -f '$(SRC_SHARE)/thread_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/thread_mod.F90

thread_mod.obj: $(SRC_SHARE)/thread_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o thread_mod.obj `if test -f '$(SRC_SHARE)/thread_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/thread_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/thread_mod.F90'; fi`

time_mod.o: $(SRC_SHARE)/time_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o time_mod.o `test -f '$(SRC_SHARE)/time_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/time_mod.F90

time_mod.obj: $(SRC_SHARE)/time_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o time_mod.obj `if test -f '$(SRC_SHARE)/time_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/time_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/time_mod.F90'; fi`

viscosity_mod.o: $(SRC_SHARE)/viscosity_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o viscosity_mod.o `test -f '$(SRC_SHARE)/viscosity_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/viscosity_mod.F90

viscosity_mod.obj: $(SRC_SHARE)/viscosity_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o viscosity_mod.obj `if test -f '$(SRC_SHARE)/viscosity_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/viscosity_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/viscosity_mod.F90'; fi`

unit_tests_mod.o: $(SRC_SHARE)/unit_tests_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o unit_tests_mod.o `test -f '$(SRC_SHARE)/unit_tests_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/unit_tests_mod.F90

unit_tests_mod.obj: $(SRC_SHARE)/unit_tests_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o unit_tests_mod.obj `if test -f '$(SRC_SHARE)/unit_tests_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/unit_tests_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/unit_tests_mod.F90'; fi`

global_norms_mod.o: $(SRC_SHARE)/global_norms_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o global_norms_mod.o `test -f '$(SRC_SHARE)/global_norms_mod.F90' || echo '$(srcdir)/'`$(SRC_SHARE)/global_norms_mod.F90

global_norms_mod.obj: $(SRC_SHARE)/global_norms_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o global_norms_mod.obj `if test -f '$(SRC_SHARE)/global_norms_mod.F90'; then $(CYGPATH_W) '$(SRC_SHARE)/global_norms_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC_SHARE)/global_norms_mod.F90'; fi`

pio_io_mod.o: $(SRC)/pio_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o pio_io_mod.o `test -f '$(SRC)/pio_io_mod.F90' || echo '$(srcdir)/'`$(SRC)/pio_io_mod.F90

pio_io_mod.obj: $(SRC)/pio_io_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o pio_io_mod.obj `if test -f '$(SRC)/pio_io_mod.F90'; then $(CYGPATH_W) '$(SRC)/pio_io_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/pio_io_mod.F90'; fi`

shr_kind_mod.o: $(UTILS)/shr_kind_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_kind_mod.o `test -f '$(UTILS)/shr_kind_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_kind_mod.F90

shr_kind_mod.obj: $(UTILS)/shr_kind_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_kind_mod.obj `if test -f '$(UTILS)/shr_kind_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_kind_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_kind_mod.F90'; fi`

shr_mpi_mod.o: $(UTILS)/shr_mpi_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_mpi_mod.o `test -f '$(UTILS)/shr_mpi_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_mpi_mod.F90

shr_mpi_mod.obj: $(UTILS)/shr_mpi_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_mpi_mod.obj `if test -f '$(UTILS)/shr_mpi_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_mpi_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_mpi_mod.F90'; fi`

shr_sys_mod.o: $(UTILS)/shr_sys_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_sys_mod.o `test -f '$(UTILS)/shr_sys_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_sys_mod.F90

shr_sys_mod.obj: $(UTILS)/shr_sys_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_sys_mod.obj `if test -f '$(UTILS)/shr_sys_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_sys_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_sys_mod.F90'; fi`

shr_file_mod.o: $(UTILS)/shr_file_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_file_mod.o `test -f '$(UTILS)/shr_file_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_file_mod.F90

shr_file_mod.obj: $(UTILS)/shr_file_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_file_mod.obj `if test -f '$(UTILS)/shr_file_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_file_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_file_mod.F90'; fi`

shr_vmath_mod.o: $(UTILS)/shr_vmath_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_vmath_mod.o `test -f '$(UTILS)/shr_vmath_mod.F90' || echo '$(srcdir)/'`$(UTILS)/shr_vmath_mod.F90

shr_vmath_mod.obj: $(UTILS)/shr_vmath_mod.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o shr_vmath_mod.obj `if test -f '$(UTILS)/shr_vmath_mod.F90'; then $(CYGPATH_W) '$(UTILS)/shr_vmath_mod.F90'; else $(CYGPATH_W) '$(srcdir)/$(UTILS)/shr_vmath_mod.F90'; fi`

fvm_main.o: $(SRC)/fvm_main.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_main.o `test -f '$(SRC)/fvm_main.F90' || echo '$(srcdir)/'`$(SRC)/fvm_main.F90

fvm_main.obj: $(SRC)/fvm_main.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o fvm_main.obj `if test -f '$(SRC)/fvm_main.F90'; then $(CYGPATH_W) '$(SRC)/fvm_main.F90'; else $(CYGPATH_W) '$(srcdir)/$(SRC)/fvm_main.F90'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLIBRARIES clean-local \
	ctags dist dist-all dist-bzip2 dist-gzip dist-lzma dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLIBRARIES


#
# Automatically generated module dependencies
#

depends: $(DEPENDS)
	@echo "Done updating dependencies"
	$(CPP) -DHAVE_CONFIG_H -I.  $(SRC)/fvm_main.F90 | $(AWK) -f $(FDEPENDS) -v NAME=$(basename $(notdir $(SRC)/fvm_main.F90)) -v SUF=$(suffix $(SRC)/fvm_main.F90)  > fvm_main.d

%$(DEPSUF): %.F90
		@echo 'Making dependencies for' $< '-->' `basename $@`
		$(CPP) -DHAVE_CONFIG_H -I. $< | $(AWK) -f $(FDEPENDS) -v NAME=$(basename $(notdir $<)) -v SUF=$(suffix $<)  > `basename $@`

clean-local:
					rm -rf *.mod 

clean-depends:
					rm -rf *.d *~

distclean-local: clean-depends

 -include *.d

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
